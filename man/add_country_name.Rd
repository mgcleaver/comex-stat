% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_country_name.R
\name{add_country_name}
\alias{add_country_name}
\title{Add Country Name Based on Comex Stat's Country Code}
\usage{
add_country_name(x, lang = c("en", "pt", "es"), drop_key = TRUE)
}
\arguments{
\item{x}{A data frame that must contain a \code{country_code} column with
valid country codes.}

\item{lang}{A string indicating the desired language for the country name.
Must be one of \code{"en"} (English), \code{"pt"} (Portuguese), or \code{"es"} (Spanish).
Defaults to \code{"en"}.}

\item{drop_key}{Logical. If \code{TRUE} (default), the \code{country_code} column is
dropped after the join.}
}
\value{
A data frame with a new column for the country name in the selected
language.
}
\description{
A convenience wrapper that joins a country name to the Comex Stat database
based on the \code{country_code} column.
}
\details{
This function performs a left join between the input data frame and an
external reference table \code{country_table},
adding a country name column in the desired language (\code{en}, \code{pt}, or \code{es}).

The function uses a package reference table called \code{country_table}
that must contain the columns:
\code{country_code}, \code{country_name}, \code{country_name_pt}, and \code{country_name_es}.
It uses \code{\link[dplyr:mutate-joins]{dplyr::left_join()}} and \code{\link[dplyr:select]{dplyr::select()}} internally.

If the column \code{country_code} is missing from the input data frame, the function will raise an error during the join.
}
\examples{
df <- data.frame(country_code = c(20, 23, 40))
add_country_name(df, lang = "pt")

}
